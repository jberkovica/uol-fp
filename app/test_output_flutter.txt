00:00 +0: loading /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart
00:00 +0: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Story Builder Pattern should create story with builder pattern
00:00 +1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Story Builder Pattern should create story with special characters using builder
00:00 +2: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Story Builder Pattern should create story with long content using builder
00:00 +3: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Story Builder Pattern should create story with future date using builder
00:00 +4: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Error Boundary Testing should handle malformed JSON gracefully
00:00 +5: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Error Boundary Testing should handle extremely large JSON values
00:00 +6: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Error Boundary Testing should handle null and empty string edge cases
00:00 +7: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Property-Based Testing JSON serialization roundtrip property
00:00 +8: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Property-Based Testing story validation properties hold for various inputs
00:00 +9: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Property-Based Testing content length variations preserve data integrity
00:00 +10: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Performance Characteristics story creation performance
00:00 +11: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Performance Characteristics JSON parsing performance
00:00 +12: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Validation Logic Testing should validate name using consistent pattern
00:00 +13: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Validation Logic Testing should validate content length boundaries
00:00 +14: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_enhanced_test.dart: Story Model - Enhanced Tests Validation Logic Testing should handle status enum edge cases
00:00 +15: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests Story Creation should create story with all required fields
00:00 +16: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests Story Creation should create story with optional fields
00:00 +17: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests Story Creation should use default status when not provided
00:00 +18: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests JSON Serialization should serialize story to JSON correctly
00:00 +19: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests JSON Serialization should deserialize story from JSON correctly
00:00 +20: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests JSON Serialization should handle missing optional fields in JSON
00:00 +21: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests JSON Serialization should handle default values in JSON deserialization
00:00 +22: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests Story Status Enum should handle all story status values
00:00 +23: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests Story Status Enum should convert status enum to string for JSON
00:00 +24: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests Data Validation should validate story title is not empty
00:00 +25: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests Data Validation should validate story content length
00:00 +26: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests Data Validation should validate URL formats
00:00 +27: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests Edge Cases should handle special characters in content
00:00 +28: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests Edge Cases should handle very long content
00:00 +29: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests Edge Cases should handle whitespace-only strings
00:00 +30: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/models/story_simple_test.dart: Story Model - Basic Tests Edge Cases should handle future datetime
00:00 +31: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +32: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +33: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +34: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +35: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +35 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +35 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/services/ai_story_service_test.dart: AIStoryService - Unit Tests Story Generation Logic should validate child name format using consistent pattern [E]
  Expected: false
    Actual: <true>
  Charlie should be invalid
  
  package:matcher                                     expect
  package:flutter_test/src/widget_tester.dart 480:18  expect
  test/services/ai_story_service_test.dart 100:13     main.<fn>.<fn>.<fn>
  
00:00 +36 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +37 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +38 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +39 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +40 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +41 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +42 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +43 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +44 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +45 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +46 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +47 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +48 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +49 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +50 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +51 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +52 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +53 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App smoke test - builds without error
00:00 +54 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App theme configuration test
00:00 +55 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widget_test.dart: App Widget Tests App localization configuration test
00:01 +56 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Widget Rendering should render without errors
00:01 +57 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Widget Rendering should highlight correct active tab
00:01 +58 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Navigation Interactions should trigger callback when tapping items
00:01 +59 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Navigation Interactions should handle multiple taps
00:01 +60 -1: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Responsive Design should render on narrow screens (may overflow)
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 120 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/lib/widgets/bottom_nav.dart:32:18

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#e819d OVERFLOWING:
  needs compositing
  creator: Row ← Padding ← MediaQuery ← Padding ← SafeArea ← Padding ← DecoratedBox ← ConstrainedBox ←
    Container ← BottomNav ← MediaQuery ← LayoutId-[<_ScaffoldSlot.bottomNavigationBar>] ← ⋯
  parentData: offset=Offset(12.0, 8.0) (can use size)
  constraints: BoxConstraints(w=296.0, h=63.0)
  size: Size(296.0, 63.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:01 +60 -2: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Responsive Design should render on narrow screens (may overflow) [E]
  Test failed. See exception logs above.
  The test description was: should render on narrow screens (may overflow)
  
00:01 +60 -2: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Responsive Design should render on very narrow screens (may overflow)
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 160 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/lib/widgets/bottom_nav.dart:32:18

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#7e4e6 OVERFLOWING:
  needs compositing
  creator: Row ← Padding ← MediaQuery ← Padding ← SafeArea ← Padding ← DecoratedBox ← ConstrainedBox ←
    Container ← BottomNav ← MediaQuery ← LayoutId-[<_ScaffoldSlot.bottomNavigationBar>] ← ⋯
  parentData: offset=Offset(12.0, 8.0) (can use size)
  constraints: BoxConstraints(w=256.0, h=63.0)
  size: Size(256.0, 63.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:01 +60 -3: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Responsive Design should render on very narrow screens (may overflow) [E]
  Test failed. See exception logs above.
  The test description was: should render on very narrow screens (may overflow)
  
00:01 +60 -3: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Responsive Design should adapt padding based on screen width
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: null
  Actual: FlutterError:<A RenderFlex overflowed by 90 pixels on the right.>

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure>.<anonymous closure> (file:///Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart:183:9)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:189:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1027:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart line 183
The test description was:
  should adapt padding based on screen width
════════════════════════════════════════════════════════════════════════════════════════════════════
00:01 +60 -4: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Responsive Design should adapt padding based on screen width [E]
  Test failed. See exception logs above.
  The test description was: should adapt padding based on screen width
  
00:01 +60 -4: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests State Management should update visual state when currentIndex changes
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: null
  Actual: FlutterError:<A RenderFlex overflowed by 90 pixels on the right.>

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure>.<anonymous closure> (file:///Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart:227:9)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:189:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1027:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart line 227
The test description was:
  should update visual state when currentIndex changes
════════════════════════════════════════════════════════════════════════════════════════════════════
00:01 +60 -5: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests State Management should update visual state when currentIndex changes [E]
  Test failed. See exception logs above.
  The test description was: should update visual state when currentIndex changes
  
00:01 +60 -5: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Error Handling should handle invalid currentIndex gracefully
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 90 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/lib/widgets/bottom_nav.dart:32:18

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#0fb05 OVERFLOWING:
  needs compositing
  creator: Row ← Padding ← MediaQuery ← Padding ← SafeArea ← Padding ← DecoratedBox ← ConstrainedBox ←
    Container ← BottomNav ← MediaQuery ← LayoutId-[<_ScaffoldSlot.bottomNavigationBar>] ← ⋯
  parentData: offset=Offset(12.0, 8.0) (can use size)
  constraints: BoxConstraints(w=326.0, h=63.0)
  size: Size(326.0, 63.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:01 +60 -6: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Error Handling should handle invalid currentIndex gracefully [E]
  Test failed. See exception logs above.
  The test description was: should handle invalid currentIndex gracefully
  
00:01 +60 -6: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Error Handling should handle negative currentIndex
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 90 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/lib/widgets/bottom_nav.dart:32:18

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#4489f OVERFLOWING:
  needs compositing
  creator: Row ← Padding ← MediaQuery ← Padding ← SafeArea ← Padding ← DecoratedBox ← ConstrainedBox ←
    Container ← BottomNav ← MediaQuery ← LayoutId-[<_ScaffoldSlot.bottomNavigationBar>] ← ⋯
  parentData: offset=Offset(12.0, 8.0) (can use size)
  constraints: BoxConstraints(w=326.0, h=63.0)
  size: Size(326.0, 63.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:01 +60 -7: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Error Handling should handle negative currentIndex [E]
  Test failed. See exception logs above.
  The test description was: should handle negative currentIndex
  
00:01 +60 -7: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Accessibility should have proper semantic structure
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 90 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/lib/widgets/bottom_nav.dart:32:18

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#f0ea4 OVERFLOWING:
  needs compositing
  creator: Row ← Padding ← MediaQuery ← Padding ← SafeArea ← Padding ← DecoratedBox ← ConstrainedBox ←
    Container ← BottomNav ← MediaQuery ← LayoutId-[<_ScaffoldSlot.bottomNavigationBar>] ← ⋯
  parentData: offset=Offset(12.0, 8.0) (can use size)
  constraints: BoxConstraints(w=326.0, h=63.0)
  size: Size(326.0, 63.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:01 +60 -8: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Accessibility should have proper semantic structure [E]
  Test failed. See exception logs above.
  The test description was: should have proper semantic structure
  
00:01 +60 -8: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Accessibility should support keyboard navigation
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 90 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/lib/widgets/bottom_nav.dart:32:18

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#91c73 OVERFLOWING:
  needs compositing
  creator: Row ← Padding ← MediaQuery ← Padding ← SafeArea ← Padding ← DecoratedBox ← ConstrainedBox ←
    Container ← BottomNav ← MediaQuery ← LayoutId-[<_ScaffoldSlot.bottomNavigationBar>] ← ⋯
  parentData: offset=Offset(12.0, 8.0) (can use size)
  constraints: BoxConstraints(w=326.0, h=63.0)
  size: Size(326.0, 63.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:01 +60 -9: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Accessibility should support keyboard navigation [E]
  Test failed. See exception logs above.
  The test description was: should support keyboard navigation
  
00:01 +60 -9: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Performance should rebuild efficiently when index changes
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 90 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/lib/widgets/bottom_nav.dart:32:18

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#654c9 OVERFLOWING:
  needs compositing
  creator: Row ← Padding ← MediaQuery ← Padding ← SafeArea ← Padding ← DecoratedBox ← ConstrainedBox ←
    Container ← BottomNav ← Builder ← MediaQuery ← ⋯
  parentData: offset=Offset(12.0, 8.0) (can use size)
  constraints: BoxConstraints(w=326.0, h=63.0)
  size: Size(326.0, 63.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:01 +60 -10: /Users/jekaterinaberkovich/Documents/Code/uol-fp-mira/app/test/widgets/bottom_nav_simple_test.dart: BottomNav Widget Tests Performance should rebuild efficiently when index changes [E]
  Test failed. See exception logs above.
  The test description was: should rebuild efficiently when index changes
  
00:01 +60 -10: Some tests failed.
